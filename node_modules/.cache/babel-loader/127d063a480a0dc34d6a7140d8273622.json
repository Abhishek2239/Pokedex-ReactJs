{"ast":null,"code":"var _jsxFileName = \"/media/abhishek/Partition 4/Courses/2.react/1React - The Complete Guide (incl Hooks, React Router, Redux)/practise/pokedex/src/components/Pokecards/Pokecards.js\";\nimport React, { Component } from 'react';\nimport Pokecard from './Pokecard/Pokecard';\nimport './Pokecards.css';\nexport default class Pokecards extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      gentoshow: [],\n      searchtype: '',\n      sideStatus: false,\n      sidebar: 'sidebar'\n    };\n\n    this.showtype = intype => {\n      this.props.resetCurrentPage();\n      this.props.searchInputHandler('');\n      this.setState({\n        searchtype: intype\n      });\n    };\n  }\n\n  componentWillMount() {\n    const csvFilePath = require('../../assets/poke.csv');\n\n    const Papa = require(\"papaparse/papaparse.min.js\");\n\n    Papa.parse(csvFilePath, {\n      header: true,\n      download: true,\n      skipEmptyLines: true,\n      complete: result => this.setState({\n        data: result.data\n      })\n    });\n  } // componentDidUpdate(prevProps, prevState) {\n  //   Object.entries(this.props).forEach(([key, val]) =>\n  //     prevProps[key] !== val && console.log(`Prop '${key}' changed`)\n  //   );\n  //   Object.entries(this.state).forEach(([key, val]) =>\n  //     prevState[key] !== val && console.log(`State '${key}' changed`)\n  //   );\n  // }\n\n\n  shouldComponentUpdate(nextState, nextProps) {\n    return this.state !== nextState || this.props !== nextProps;\n  }\n\n  render() {\n    // console.log('pokecards.js rendering')\n    let searchedItems = '';\n    let searchedType = '';\n    let pokemons = [];\n    let pokeDisplay = [];\n    let tempArray = this.state.data;\n\n    if (this.props.showGen) {\n      if (this.props.gen === 1) {\n        tempArray.slice(0, 150);\n      }\n\n      this.setState({\n        gentoshow: tempArray\n      });\n    }\n\n    if (this.props.showGen) {\n      searchedItems = this.state.gentoshow.filter(item => {\n        return item.Name.toLowerCase().indexOf(this.props.searchItem.toLowerCase()) !== -1 || item.Abilities.toLowerCase().indexOf(this.props.searchItem.toLowerCase()) !== -1 || item.ID.indexOf(this.state.searchItem) !== -1;\n      });\n      pokemons = searchedItems.map(item => {\n        return React.createElement(Pokecard, {\n          imgSrc: item.ImgSrc,\n          name: item.Name,\n          id: item.ID,\n          key: item.ID,\n          abilities: item.Abilities,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        });\n      });\n    } else if (this.state.showtype) {\n      searchedType = this.state.data.filter(item => {\n        return item.Abilities.toLowerCase().indexOf(this.state.searchtype.toLowerCase()) !== -1;\n      });\n      pokemons = searchedType.map(item => {\n        return React.createElement(Pokecard, {\n          imgSrc: item.ImgSrc,\n          name: item.Name,\n          id: item.ID,\n          key: item.ID,\n          abilities: item.Abilities,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        });\n      });\n    } else {\n      searchedItems = this.state.data.filter(item => {\n        return item.Name.toLowerCase().indexOf(this.props.searchItem.toLowerCase()) !== -1 || item.Abilities.toLowerCase().indexOf(this.props.searchItem.toLowerCase()) !== -1 || item.ID.indexOf(this.state.searchItem) !== -1;\n      });\n      pokemons = searchedItems.map(item => {\n        return React.createElement(Pokecard, {\n          imgSrc: item.ImgSrc,\n          name: item.Name,\n          id: item.ID,\n          key: item.ID,\n          abilities: item.Abilities,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        });\n      });\n    } //page wise showing result page1=1:50\n\n\n    for (let ind = this.props.start; ind < this.props.end; ind++) {\n      pokeDisplay.push(pokemons[ind]);\n    }\n\n    this.props.setNoOfPosts(this.props.showGen ? this.state.gentoshow.length : this.props.showType ? searchedType.length : this.state.searchItem !== '' ? searchedItems.length : 809);\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"pokecardsdiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, this.props.children, React.createElement(\"div\", {\n      className: \"pokecards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, pokeDisplay)));\n  }\n\n}","map":{"version":3,"sources":["/media/abhishek/Partition 4/Courses/2.react/1React - The Complete Guide (incl Hooks, React Router, Redux)/practise/pokedex/src/components/Pokecards/Pokecards.js"],"names":["React","Component","Pokecard","Pokecards","state","data","gentoshow","searchtype","sideStatus","sidebar","showtype","intype","props","resetCurrentPage","searchInputHandler","setState","componentWillMount","csvFilePath","require","Papa","parse","header","download","skipEmptyLines","complete","result","shouldComponentUpdate","nextState","nextProps","render","searchedItems","searchedType","pokemons","pokeDisplay","tempArray","showGen","gen","slice","filter","item","Name","toLowerCase","indexOf","searchItem","Abilities","ID","map","ImgSrc","ind","start","end","push","setNoOfPosts","length","showType","children"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Pokecard from './Pokecard/Pokecard';\nimport './Pokecards.css';\n\n\nexport default class Pokecards extends Component {\n\n\n  state = {\n    data: [],\n\n    gentoshow: [],\n\n    searchtype: '',\n    sideStatus: false,\n    sidebar: 'sidebar'\n\n  }\n\n  componentWillMount() {\n    const csvFilePath = require('../../assets/poke.csv');\n    const Papa = require(\"papaparse/papaparse.min.js\");\n    Papa.parse(csvFilePath, {\n      header: true,\n      download: true,\n      skipEmptyLines: true,\n      complete: (result) => this.setState({ data: result.data })\n    })\n  }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   Object.entries(this.props).forEach(([key, val]) =>\n  //     prevProps[key] !== val && console.log(`Prop '${key}' changed`)\n  //   );\n  //   Object.entries(this.state).forEach(([key, val]) =>\n  //     prevState[key] !== val && console.log(`State '${key}' changed`)\n  //   );\n\n\n  // }\n\n\n  showtype = (intype) => {\n\n    this.props.resetCurrentPage()\n    this.props.searchInputHandler('')\n\n\n    this.setState({ searchtype: intype })\n\n  }\n\n\n  shouldComponentUpdate(nextState, nextProps) {\n    return this.state !== nextState || this.props !== nextProps\n  }\n\n  render() {\n    // console.log('pokecards.js rendering')\n\n    let searchedItems = ''\n    let searchedType = ''\n    let pokemons = []\n    let pokeDisplay = []\n    let tempArray = this.state.data\n\n    if(this.props.showGen){\n\n      if(this.props.gen ===1 ){\n        tempArray.slice(0,150)\n      }\n\n      this.setState({gentoshow:tempArray})\n\n    }\n\n\n\n    if (this.props.showGen) {\n\n      searchedItems = this.state.gentoshow.filter(\n        (item) => {\n\n          return item.Name.toLowerCase().indexOf(this.props.searchItem.toLowerCase()) !== -1\n            || item.Abilities.toLowerCase().indexOf(this.props.searchItem.toLowerCase()) !== -1\n            || item.ID.indexOf(this.state.searchItem) !== -1;\n        }\n\n      );\n      pokemons = searchedItems.map((item) => {\n        return <Pokecard\n          imgSrc={item.ImgSrc}\n          name={item.Name}\n          id={item.ID}\n          key={item.ID}\n          abilities={item.Abilities}\n        />\n      })\n    }\n\n    else if (this.state.showtype) {\n\n      searchedType = this.state.data.filter(\n        (item) => {\n          return item.Abilities.toLowerCase().indexOf(this.state.searchtype.toLowerCase()) !== -1;\n        }\n      );\n      pokemons = searchedType.map((item) => {\n        return <Pokecard\n          imgSrc={item.ImgSrc}\n          name={item.Name}\n          id={item.ID}\n          key={item.ID}\n          abilities={item.Abilities}\n        />\n      })\n    }\n    else {\n      searchedItems = this.state.data.filter(\n        (item) => {\n          return item.Name.toLowerCase().indexOf(this.props.searchItem.toLowerCase()) !== -1\n            || item.Abilities.toLowerCase().indexOf(this.props.searchItem.toLowerCase()) !== -1\n            || item.ID.indexOf(this.state.searchItem) !== -1\n        }\n      );\n      pokemons = (searchedItems.map((item) => {\n        return <Pokecard\n          imgSrc={item.ImgSrc}\n          name={item.Name}\n          id={item.ID}\n          key={item.ID}\n          abilities={item.Abilities}\n        />\n      }))\n    }\n\n    //page wise showing result page1=1:50\n    for (let ind = this.props.start; ind < this.props.end; ind++) {\n      pokeDisplay.push(pokemons[ind])\n    }\n\n    this.props.setNoOfPosts(this.props.showGen ? this.state.gentoshow.length\n      : this.props.showType ? searchedType.length\n        : this.state.searchItem !== '' ? searchedItems.length : 809)\n\n    return (\n      <>\n        <div className=\"pokecardsdiv\">\n\n          {this.props.children}\n\n          <div className=\"pokecards\">\n            {pokeDisplay}\n          </div>\n\n        </div>\n      </>\n\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}