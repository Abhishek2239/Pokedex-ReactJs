{"ast":null,"code":"var _jsxFileName = \"/media/abhishek/Partition 4/Courses/2.react/1React - The Complete Guide (incl Hooks, React Router, Redux)/practise/pokedex/src/components/Pokecards/Pokecards.js\";\nimport React, { Component } from 'react';\nimport Pokecard from './Pokecard/Pokecard';\nimport './Pokecards.css';\nexport default class Pokecards extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      gentoshow: [],\n      searchtype: '',\n      sideStatus: false,\n      sidebar: 'sidebar'\n    };\n\n    this.showgen = () => {\n      this.props.resetCurrentPage();\n      this.props.searchInputHandler('');\n      let num = this.props.gen;\n      let temp = this.state.data;\n\n      if (num === 1) {\n        temp.slice(1, 151);\n        this.setState({\n          gentoshow: temp\n        });\n      } else if (num === 2) {\n        temp = [];\n\n        for (let i = 151; i < 250; i++) {\n          temp.push(this.state.data[i]);\n        }\n\n        this.setState({\n          gentoshow: temp\n        });\n      } else if (num === 3) {\n        temp = [];\n\n        for (let i = 251; i < 385; i++) {\n          temp.push(this.state.data[i]);\n        }\n\n        this.setState({\n          gentoshow: temp\n        });\n      } else if (num === 4) {\n        temp = [];\n\n        for (let i = 386; i < 492; i++) {\n          temp.push(this.state.data[i]);\n        }\n\n        this.setState({\n          gentoshow: temp\n        });\n      } else if (num === 5) {\n        temp = [];\n\n        for (let i = 493; i < 648; i++) {\n          temp.push(this.state.data[i]);\n        }\n\n        this.setState({\n          gentoshow: temp\n        });\n      } else if (num === 6) {\n        temp = [];\n\n        for (let i = 649; i < 720; i++) {\n          temp.push(this.state.data[i]);\n        }\n\n        this.setState({\n          gentoshow: temp\n        });\n      } else if (num === 7) {\n        temp = [];\n\n        for (let i = 721; i < 808; i++) {\n          temp.push(this.state.data[i]);\n        }\n\n        this.setState({\n          gentoshow: temp\n        });\n      }\n    };\n\n    this.showtype = intype => {\n      this.props.resetCurrentPage();\n      this.props.searchInputHandler('');\n      this.setState({\n        searchtype: intype\n      });\n    };\n  }\n\n  componentWillMount() {\n    const csvFilePath = require('../../assets/poke.csv');\n\n    const Papa = require(\"papaparse/papaparse.min.js\");\n\n    Papa.parse(csvFilePath, {\n      header: true,\n      download: true,\n      skipEmptyLines: true,\n      complete: result => this.setState({\n        data: result.data\n      })\n    });\n  } // componentDidUpdate(prevProps, prevState) {\n  //   Object.entries(this.props).forEach(([key, val]) =>\n  //     prevProps[key] !== val && console.log(`Prop '${key}' changed`)\n  //   );\n  //   Object.entries(this.state).forEach(([key, val]) =>\n  //     prevState[key] !== val && console.log(`State '${key}' changed`)\n  //   );\n  // }\n\n\n  shouldComponentUpdate(nextState, nextProps) {\n    return this.state !== nextState || this.props !== nextProps;\n  }\n\n  render() {\n    // console.log('pokecards.js rendering')\n    let searchedItems = '';\n    let searchedType = '';\n    let pokemons = [];\n    let pokeDisplay = [];\n    const pills = ['Grass', 'Fire', 'Water', 'Poison', 'Flying', 'Ground', 'Bug', 'Ghost', 'Normal', 'Electric', 'Fairy', 'Fighting', 'Psychic', 'Rock', 'Steel', 'Ice', 'Dragon', 'Dark'];\n    const gens = [{\n      name: 'I',\n      num: 1\n    }, {\n      name: 'II',\n      num: 2\n    }, {\n      name: 'III',\n      num: 3\n    }, {\n      name: 'IV',\n      num: 4\n    }, {\n      name: 'V',\n      num: 5\n    }, {\n      name: 'VI',\n      num: 6\n    }, {\n      name: 'VII',\n      num: 7\n    }, {\n      name: 'All',\n      num: ''\n    }];\n\n    if (this.props.showGen) {\n      searchedItems = this.state.gentoshow.filter(item => {\n        return item.Name.toLowerCase().indexOf(this.props.searchItem.toLowerCase()) !== -1 || item.Abilities.toLowerCase().indexOf(this.props.searchItem.toLowerCase()) !== -1 || item.ID.indexOf(this.state.searchItem) !== -1;\n      });\n      pokemons = searchedItems.map(item => {\n        return React.createElement(Pokecard, {\n          imgSrc: item.ImgSrc,\n          name: item.Name,\n          id: item.ID,\n          key: item.ID,\n          abilities: item.Abilities,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        });\n      });\n    } else if (this.state.showtype) {\n      searchedType = this.state.data.filter(item => {\n        return item.Abilities.toLowerCase().indexOf(this.state.searchtype.toLowerCase()) !== -1;\n      });\n      pokemons = searchedType.map(item => {\n        return React.createElement(Pokecard, {\n          imgSrc: item.ImgSrc,\n          name: item.Name,\n          id: item.ID,\n          key: item.ID,\n          abilities: item.Abilities,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        });\n      });\n    } else {\n      searchedItems = this.state.data.filter(item => {\n        return item.Name.toLowerCase().indexOf(this.props.searchItem.toLowerCase()) !== -1 || item.Abilities.toLowerCase().indexOf(this.props.searchItem.toLowerCase()) !== -1 || item.ID.indexOf(this.state.searchItem) !== -1;\n      });\n      pokemons = searchedItems.map(item => {\n        return React.createElement(Pokecard, {\n          imgSrc: item.ImgSrc,\n          name: item.Name,\n          id: item.ID,\n          key: item.ID,\n          abilities: item.Abilities,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        });\n      });\n    }\n\n    for (let ind = this.props.start; ind < this.props.end; ind++) {\n      pokeDisplay.push(pokemons[ind]);\n    }\n\n    this.props.setNoOfPosts(this.props.showGen ? this.state.gentoshow.length : this.props.showType ? searchedType.length : this.state.searchItem !== '' ? searchedItems.length : 809);\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"pokecardsdiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"pokecards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, pokeDisplay)));\n  }\n\n}","map":{"version":3,"sources":["/media/abhishek/Partition 4/Courses/2.react/1React - The Complete Guide (incl Hooks, React Router, Redux)/practise/pokedex/src/components/Pokecards/Pokecards.js"],"names":["React","Component","Pokecard","Pokecards","state","data","gentoshow","searchtype","sideStatus","sidebar","showgen","props","resetCurrentPage","searchInputHandler","num","gen","temp","slice","setState","i","push","showtype","intype","componentWillMount","csvFilePath","require","Papa","parse","header","download","skipEmptyLines","complete","result","shouldComponentUpdate","nextState","nextProps","render","searchedItems","searchedType","pokemons","pokeDisplay","pills","gens","name","showGen","filter","item","Name","toLowerCase","indexOf","searchItem","Abilities","ID","map","ImgSrc","ind","start","end","setNoOfPosts","length","showType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAO,iBAAP;AAGA,eAAe,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAG/CG,KAH+C,GAGvC;AACNC,MAAAA,IAAI,EAAE,EADA;AAGNC,MAAAA,SAAS,EAAE,EAHL;AAKNC,MAAAA,UAAU,EAAE,EALN;AAMNC,MAAAA,UAAU,EAAE,KANN;AAONC,MAAAA,OAAO,EAAE;AAPH,KAHuC;;AAAA,SAoC/CC,OApC+C,GAoCrC,MAAM;AAEd,WAAKC,KAAL,CAAWC,gBAAX;AACA,WAAKD,KAAL,CAAWE,kBAAX,CAA8B,EAA9B;AAEA,UAAIC,GAAG,GAAC,KAAKH,KAAL,CAAWI,GAAnB;AACA,UAAIC,IAAI,GAAG,KAAKZ,KAAL,CAAWC,IAAtB;;AACA,UAAIS,GAAG,KAAK,CAAZ,EAAe;AACbE,QAAAA,IAAI,CAACC,KAAL,CAAW,CAAX,EAAa,GAAb;AACA,aAAKC,QAAL,CAAc;AAAEZ,UAAAA,SAAS,EAAEU;AAAb,SAAd;AACD,OAHD,MAIK,IAAIF,GAAG,KAAK,CAAZ,EAAe;AAClBE,QAAAA,IAAI,GAAG,EAAP;;AACA,aAAK,IAAIG,CAAC,GAAG,GAAb,EAAkBA,CAAC,GAAG,GAAtB,EAA2BA,CAAC,EAA5B,EAAgC;AAC9BH,UAAAA,IAAI,CAACI,IAAL,CAAU,KAAKhB,KAAL,CAAWC,IAAX,CAAgBc,CAAhB,CAAV;AACD;;AAAC,aAAKD,QAAL,CAAc;AAAEZ,UAAAA,SAAS,EAAEU;AAAb,SAAd;AACH,OALI,MAMA,IAAIF,GAAG,KAAK,CAAZ,EAAe;AAClBE,QAAAA,IAAI,GAAG,EAAP;;AACA,aAAK,IAAIG,CAAC,GAAG,GAAb,EAAkBA,CAAC,GAAG,GAAtB,EAA2BA,CAAC,EAA5B,EAAgC;AAC9BH,UAAAA,IAAI,CAACI,IAAL,CAAU,KAAKhB,KAAL,CAAWC,IAAX,CAAgBc,CAAhB,CAAV;AACD;;AAAC,aAAKD,QAAL,CAAc;AAAEZ,UAAAA,SAAS,EAAEU;AAAb,SAAd;AACH,OALI,MAMA,IAAIF,GAAG,KAAK,CAAZ,EAAe;AAClBE,QAAAA,IAAI,GAAG,EAAP;;AACA,aAAK,IAAIG,CAAC,GAAG,GAAb,EAAkBA,CAAC,GAAG,GAAtB,EAA2BA,CAAC,EAA5B,EAAgC;AAC9BH,UAAAA,IAAI,CAACI,IAAL,CAAU,KAAKhB,KAAL,CAAWC,IAAX,CAAgBc,CAAhB,CAAV;AACD;;AAAC,aAAKD,QAAL,CAAc;AAAEZ,UAAAA,SAAS,EAAEU;AAAb,SAAd;AACH,OALI,MAMA,IAAIF,GAAG,KAAK,CAAZ,EAAe;AAClBE,QAAAA,IAAI,GAAG,EAAP;;AACA,aAAK,IAAIG,CAAC,GAAG,GAAb,EAAkBA,CAAC,GAAG,GAAtB,EAA2BA,CAAC,EAA5B,EAAgC;AAC9BH,UAAAA,IAAI,CAACI,IAAL,CAAU,KAAKhB,KAAL,CAAWC,IAAX,CAAgBc,CAAhB,CAAV;AACD;;AAAC,aAAKD,QAAL,CAAc;AAAEZ,UAAAA,SAAS,EAAEU;AAAb,SAAd;AACH,OALI,MAMA,IAAIF,GAAG,KAAK,CAAZ,EAAe;AAClBE,QAAAA,IAAI,GAAG,EAAP;;AACA,aAAK,IAAIG,CAAC,GAAG,GAAb,EAAkBA,CAAC,GAAG,GAAtB,EAA2BA,CAAC,EAA5B,EAAgC;AAC9BH,UAAAA,IAAI,CAACI,IAAL,CAAU,KAAKhB,KAAL,CAAWC,IAAX,CAAgBc,CAAhB,CAAV;AACD;;AAAC,aAAKD,QAAL,CAAc;AAAEZ,UAAAA,SAAS,EAAEU;AAAb,SAAd;AACH,OALI,MAMA,IAAIF,GAAG,KAAK,CAAZ,EAAe;AAClBE,QAAAA,IAAI,GAAG,EAAP;;AACA,aAAK,IAAIG,CAAC,GAAG,GAAb,EAAkBA,CAAC,GAAG,GAAtB,EAA2BA,CAAC,EAA5B,EAAgC;AAC9BH,UAAAA,IAAI,CAACI,IAAL,CAAU,KAAKhB,KAAL,CAAWC,IAAX,CAAgBc,CAAhB,CAAV;AACD;;AAAC,aAAKD,QAAL,CAAc;AAAEZ,UAAAA,SAAS,EAAEU;AAAb,SAAd;AACH;AAEF,KApF8C;;AAAA,SAwF/CK,QAxF+C,GAwFnCC,MAAD,IAAY;AAErB,WAAKX,KAAL,CAAWC,gBAAX;AACA,WAAKD,KAAL,CAAWE,kBAAX,CAA8B,EAA9B;AAGA,WAAKK,QAAL,CAAc;AAAEX,QAAAA,UAAU,EAAEe;AAAd,OAAd;AAED,KAhG8C;AAAA;;AAc/CC,EAAAA,kBAAkB,GAAG;AACnB,UAAMC,WAAW,GAAGC,OAAO,CAAC,uBAAD,CAA3B;;AACA,UAAMC,IAAI,GAAGD,OAAO,CAAC,4BAAD,CAApB;;AACAC,IAAAA,IAAI,CAACC,KAAL,CAAWH,WAAX,EAAwB;AACtBI,MAAAA,MAAM,EAAE,IADc;AAEtBC,MAAAA,QAAQ,EAAE,IAFY;AAGtBC,MAAAA,cAAc,EAAE,IAHM;AAItBC,MAAAA,QAAQ,EAAGC,MAAD,IAAY,KAAKd,QAAL,CAAc;AAAEb,QAAAA,IAAI,EAAE2B,MAAM,CAAC3B;AAAf,OAAd;AAJA,KAAxB;AAMD,GAvB8C,CAyB/C;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;AAiEA4B,EAAAA,qBAAqB,CAACC,SAAD,EAAWC,SAAX,EAAqB;AACxC,WAAO,KAAK/B,KAAL,KAAe8B,SAAf,IAA4B,KAAKvB,KAAL,KAAewB,SAAlD;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP;AAEA,QAAIC,aAAa,GAAG,EAApB;AACA,QAAIC,YAAY,GAAG,EAAnB;AACA,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,WAAW,GAAG,EAAlB;AAEA,UAAMC,KAAK,GAAG,CAAC,OAAD,EAAU,MAAV,EAAkB,OAAlB,EAA2B,QAA3B,EAAqC,QAArC,EAA+C,QAA/C,EAAyD,KAAzD,EAAgE,OAAhE,EAAyE,QAAzE,EACZ,UADY,EACA,OADA,EACS,UADT,EACqB,SADrB,EACgC,MADhC,EACwC,OADxC,EACiD,KADjD,EACwD,QADxD,EACkE,MADlE,CAAd;AAGA,UAAMC,IAAI,GAAG,CAAC;AAAEC,MAAAA,IAAI,EAAE,GAAR;AAAa7B,MAAAA,GAAG,EAAE;AAAlB,KAAD,EAAwB;AAAE6B,MAAAA,IAAI,EAAE,IAAR;AAAc7B,MAAAA,GAAG,EAAE;AAAnB,KAAxB,EAAgD;AAAE6B,MAAAA,IAAI,EAAE,KAAR;AAAe7B,MAAAA,GAAG,EAAE;AAApB,KAAhD,EAAyE;AAAE6B,MAAAA,IAAI,EAAE,IAAR;AAAc7B,MAAAA,GAAG,EAAE;AAAnB,KAAzE,EAAiG;AAAE6B,MAAAA,IAAI,EAAE,GAAR;AAAa7B,MAAAA,GAAG,EAAE;AAAlB,KAAjG,EACb;AAAE6B,MAAAA,IAAI,EAAE,IAAR;AAAc7B,MAAAA,GAAG,EAAE;AAAnB,KADa,EACW;AAAE6B,MAAAA,IAAI,EAAE,KAAR;AAAe7B,MAAAA,GAAG,EAAE;AAApB,KADX,EACoC;AAAE6B,MAAAA,IAAI,EAAE,KAAR;AAAe7B,MAAAA,GAAG,EAAE;AAApB,KADpC,CAAb;;AAGA,QAAI,KAAKH,KAAL,CAAWiC,OAAf,EAAwB;AAEtBP,MAAAA,aAAa,GAAG,KAAKjC,KAAL,CAAWE,SAAX,CAAqBuC,MAArB,CACbC,IAAD,IAAU;AAER,eAAOA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,OAAxB,CAAgC,KAAKtC,KAAL,CAAWuC,UAAX,CAAsBF,WAAtB,EAAhC,MAAyE,CAAC,CAA1E,IACFF,IAAI,CAACK,SAAL,CAAeH,WAAf,GAA6BC,OAA7B,CAAqC,KAAKtC,KAAL,CAAWuC,UAAX,CAAsBF,WAAtB,EAArC,MAA8E,CAAC,CAD7E,IAEFF,IAAI,CAACM,EAAL,CAAQH,OAAR,CAAgB,KAAK7C,KAAL,CAAW8C,UAA3B,MAA2C,CAAC,CAFjD;AAGD,OANa,CAAhB;AASAX,MAAAA,QAAQ,GAAGF,aAAa,CAACgB,GAAd,CAAmBP,IAAD,IAAU;AACrC,eAAO,oBAAC,QAAD;AACL,UAAA,MAAM,EAAEA,IAAI,CAACQ,MADR;AAEL,UAAA,IAAI,EAAER,IAAI,CAACC,IAFN;AAGL,UAAA,EAAE,EAAED,IAAI,CAACM,EAHJ;AAIL,UAAA,GAAG,EAAEN,IAAI,CAACM,EAJL;AAKL,UAAA,SAAS,EAAEN,IAAI,CAACK,SALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAOD,OARU,CAAX;AASD,KApBD,MAsBK,IAAI,KAAK/C,KAAL,CAAWiB,QAAf,EAAyB;AAE5BiB,MAAAA,YAAY,GAAG,KAAKlC,KAAL,CAAWC,IAAX,CAAgBwC,MAAhB,CACZC,IAAD,IAAU;AACR,eAAOA,IAAI,CAACK,SAAL,CAAeH,WAAf,GAA6BC,OAA7B,CAAqC,KAAK7C,KAAL,CAAWG,UAAX,CAAsByC,WAAtB,EAArC,MAA8E,CAAC,CAAtF;AACD,OAHY,CAAf;AAKAT,MAAAA,QAAQ,GAAGD,YAAY,CAACe,GAAb,CAAkBP,IAAD,IAAU;AACpC,eAAO,oBAAC,QAAD;AACL,UAAA,MAAM,EAAEA,IAAI,CAACQ,MADR;AAEL,UAAA,IAAI,EAAER,IAAI,CAACC,IAFN;AAGL,UAAA,EAAE,EAAED,IAAI,CAACM,EAHJ;AAIL,UAAA,GAAG,EAAEN,IAAI,CAACM,EAJL;AAKL,UAAA,SAAS,EAAEN,IAAI,CAACK,SALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAOD,OARU,CAAX;AASD,KAhBI,MAiBA;AACHd,MAAAA,aAAa,GAAG,KAAKjC,KAAL,CAAWC,IAAX,CAAgBwC,MAAhB,CACbC,IAAD,IAAU;AACR,eAAOA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,OAAxB,CAAgC,KAAKtC,KAAL,CAAWuC,UAAX,CAAsBF,WAAtB,EAAhC,MAAyE,CAAC,CAA1E,IACFF,IAAI,CAACK,SAAL,CAAeH,WAAf,GAA6BC,OAA7B,CAAqC,KAAKtC,KAAL,CAAWuC,UAAX,CAAsBF,WAAtB,EAArC,MAA8E,CAAC,CAD7E,IAEFF,IAAI,CAACM,EAAL,CAAQH,OAAR,CAAgB,KAAK7C,KAAL,CAAW8C,UAA3B,MAA2C,CAAC,CAFjD;AAGD,OALa,CAAhB;AAOAX,MAAAA,QAAQ,GAAIF,aAAa,CAACgB,GAAd,CAAmBP,IAAD,IAAU;AACtC,eAAO,oBAAC,QAAD;AACL,UAAA,MAAM,EAAEA,IAAI,CAACQ,MADR;AAEL,UAAA,IAAI,EAAER,IAAI,CAACC,IAFN;AAGL,UAAA,EAAE,EAAED,IAAI,CAACM,EAHJ;AAIL,UAAA,GAAG,EAAEN,IAAI,CAACM,EAJL;AAKL,UAAA,SAAS,EAAEN,IAAI,CAACK,SALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAOD,OARW,CAAZ;AASD;;AAED,SAAK,IAAII,GAAG,GAAG,KAAK5C,KAAL,CAAW6C,KAA1B,EAAiCD,GAAG,GAAG,KAAK5C,KAAL,CAAW8C,GAAlD,EAAuDF,GAAG,EAA1D,EAA8D;AAC5Df,MAAAA,WAAW,CAACpB,IAAZ,CAAiBmB,QAAQ,CAACgB,GAAD,CAAzB;AACD;;AAED,SAAK5C,KAAL,CAAW+C,YAAX,CAAwB,KAAK/C,KAAL,CAAWiC,OAAX,GAAqB,KAAKxC,KAAL,CAAWE,SAAX,CAAqBqD,MAA1C,GACE,KAAKhD,KAAL,CAAWiD,QAAX,GAAsBtB,YAAY,CAACqB,MAAnC,GACA,KAAKvD,KAAL,CAAW8C,UAAX,KAA0B,EAA1B,GAA+Bb,aAAa,CAACsB,MAA7C,GAAsD,GAFhF;AAIA,WACE,0CAME;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEGnB,WAFH,CAJF,CANF,CADF;AAsBD;;AA7M8C","sourcesContent":["import React, { Component } from 'react';\nimport Pokecard from './Pokecard/Pokecard';\nimport './Pokecards.css';\n\n\nexport default class Pokecards extends Component {\n\n\n  state = {\n    data: [],\n  \n    gentoshow: [],\n  \n    searchtype: '',\n    sideStatus: false,\n    sidebar: 'sidebar'\n\n  }\n\n  componentWillMount() {\n    const csvFilePath = require('../../assets/poke.csv');\n    const Papa = require(\"papaparse/papaparse.min.js\");\n    Papa.parse(csvFilePath, {\n      header: true,\n      download: true,\n      skipEmptyLines: true,\n      complete: (result) => this.setState({ data: result.data })\n    })\n  }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   Object.entries(this.props).forEach(([key, val]) =>\n  //     prevProps[key] !== val && console.log(`Prop '${key}' changed`)\n  //   );\n  //   Object.entries(this.state).forEach(([key, val]) =>\n  //     prevState[key] !== val && console.log(`State '${key}' changed`)\n  //   );\n\n   \n  // }\n\n  showgen = () => {\n   \n    this.props.resetCurrentPage()\n    this.props.searchInputHandler('')\n\n    let num=this.props.gen\n    let temp = this.state.data\n    if (num === 1) {\n      temp.slice(1,151)      \n      this.setState({ gentoshow: temp })\n    }\n    else if (num === 2) {\n      temp = []\n      for (let i = 151; i < 250; i++) {\n        temp.push(this.state.data[i])\n      } this.setState({ gentoshow: temp })\n    }\n    else if (num === 3) {\n      temp = []\n      for (let i = 251; i < 385; i++) {\n        temp.push(this.state.data[i])\n      } this.setState({ gentoshow: temp })\n    }\n    else if (num === 4) {\n      temp = []\n      for (let i = 386; i < 492; i++) {\n        temp.push(this.state.data[i])\n      } this.setState({ gentoshow: temp })\n    }\n    else if (num === 5) {\n      temp = []\n      for (let i = 493; i < 648; i++) {\n        temp.push(this.state.data[i])\n      } this.setState({ gentoshow: temp })\n    }\n    else if (num === 6) {\n      temp = []\n      for (let i = 649; i < 720; i++) {\n        temp.push(this.state.data[i])\n      } this.setState({ gentoshow: temp })\n    }\n    else if (num === 7) {\n      temp = []\n      for (let i = 721; i < 808; i++) {\n        temp.push(this.state.data[i])\n      } this.setState({ gentoshow: temp })\n    }\n    \n  }\n\n  \n\n  showtype = (intype) => {\n    \n    this.props.resetCurrentPage()\n    this.props.searchInputHandler('')\n\n      \n    this.setState({ searchtype: intype })\n    \n  }\n\n\n  shouldComponentUpdate(nextState,nextProps){\n    return this.state !== nextState || this.props !== nextProps\n  }\n\n  render() {\n    // console.log('pokecards.js rendering')\n\n    let searchedItems = ''\n    let searchedType = ''\n    let pokemons = []\n    let pokeDisplay = []\n\n    const pills = ['Grass', 'Fire', 'Water', 'Poison', 'Flying', 'Ground', 'Bug', 'Ghost', 'Normal',\n      'Electric', 'Fairy', 'Fighting', 'Psychic', 'Rock', 'Steel', 'Ice', 'Dragon', 'Dark']\n\n    const gens = [{ name: 'I', num: 1 }, { name: 'II', num: 2 }, { name: 'III', num: 3 }, { name: 'IV', num: 4 }, { name: 'V', num: 5 },\n    { name: 'VI', num: 6 }, { name: 'VII', num: 7 }, { name: 'All', num: '' }]\n\n    if (this.props.showGen) {\n\n      searchedItems = this.state.gentoshow.filter(\n        (item) => {\n\n          return item.Name.toLowerCase().indexOf(this.props.searchItem.toLowerCase()) !== -1\n            || item.Abilities.toLowerCase().indexOf(this.props.searchItem.toLowerCase()) !== -1\n            || item.ID.indexOf(this.state.searchItem) !== -1;\n        }\n\n      );\n      pokemons = searchedItems.map((item) => {\n        return <Pokecard\n          imgSrc={item.ImgSrc}\n          name={item.Name}\n          id={item.ID}\n          key={item.ID}\n          abilities={item.Abilities}\n        />\n      })\n    }\n\n    else if (this.state.showtype) {\n\n      searchedType = this.state.data.filter(\n        (item) => {\n          return item.Abilities.toLowerCase().indexOf(this.state.searchtype.toLowerCase()) !== -1;\n        }\n      );\n      pokemons = searchedType.map((item) => {\n        return <Pokecard\n          imgSrc={item.ImgSrc}\n          name={item.Name}\n          id={item.ID}\n          key={item.ID}\n          abilities={item.Abilities}\n        />\n      })\n    }\n    else {\n      searchedItems = this.state.data.filter(\n        (item) => {\n          return item.Name.toLowerCase().indexOf(this.props.searchItem.toLowerCase()) !== -1\n            || item.Abilities.toLowerCase().indexOf(this.props.searchItem.toLowerCase()) !== -1\n            || item.ID.indexOf(this.state.searchItem) !== -1\n        }\n      );\n      pokemons = (searchedItems.map((item) => {\n        return <Pokecard\n          imgSrc={item.ImgSrc}\n          name={item.Name}\n          id={item.ID}\n          key={item.ID}\n          abilities={item.Abilities}\n        />\n      }))\n    }\n\n    for (let ind = this.props.start; ind < this.props.end; ind++) {\n      pokeDisplay.push(pokemons[ind])\n    }\n\n    this.props.setNoOfPosts(this.props.showGen ? this.state.gentoshow.length \n                            : this.props.showType ? searchedType.length \n                            : this.state.searchItem !== '' ? searchedItems.length : 809)\n\n    return (\n      <>\n        \n\n        \n        \n\n        <div className=\"pokecardsdiv\">\n\n          \n\n          <div className=\"pokecards\">\n            \n            {pokeDisplay}\n          </div>\n\n\n\n        </div>\n      </>\n\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}