{"ast":null,"code":"var _curry2 =\n/*#__PURE__*/\nrequire('./internal/_curry2');\n\nvar _reduce =\n/*#__PURE__*/\nrequire('./internal/_reduce');\n\nvar ap =\n/*#__PURE__*/\nrequire('./ap');\n\nvar curryN =\n/*#__PURE__*/\nrequire('./curryN');\n\nvar map =\n/*#__PURE__*/\nrequire('./map');\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      var madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\n\n\nvar liftN =\n/*#__PURE__*/\n_curry2(function liftN(arity, fn) {\n  var lifted = curryN(arity, fn);\n  return curryN(arity, function () {\n    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});\n\nmodule.exports = liftN;","map":null,"metadata":{},"sourceType":"script"}