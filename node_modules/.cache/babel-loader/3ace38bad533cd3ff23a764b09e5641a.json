{"ast":null,"code":"var _jsxFileName = \"/media/abhishek/Partition 4/Courses/2.react/1React - The Complete Guide (incl Hooks, React Router, Redux)/practise/pokedex/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Pokecard from '../components/Pokecard/Pokecard';\nexport default class App extends Component {\n  constructor(props) {\n    // Call super class\n    super(props); // Bind this to function updateData (This eliminates the error)\n\n    this.state = {\n      data: []\n    };\n    this.updateData = this.updateData.bind(this);\n  }\n\n  componentWillMount() {\n    // Your parse code, but not seperated in a function\n    var csvFilePath = require(\"../assets/poke.csv\");\n\n    var Papa = require(\"papaparse/papaparse.min.js\");\n\n    Papa.parse(csvFilePath, {\n      header: true,\n      download: true,\n      skipEmptyLines: true,\n      // Here this is also available. So we can call our custom class method\n      complete: this.updateData\n    });\n  }\n\n  updateData(result) {\n    const data = result.data; // Here this is available and we can call this.setState (since it's binded in the constructor)\n\n    this.setState({\n      data: data\n    }); // or shorter ES syntax: this.setState({ data });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.Data);\n  }\n\n}","map":{"version":3,"sources":["/media/abhishek/Partition 4/Courses/2.react/1React - The Complete Guide (incl Hooks, React Router, Redux)/practise/pokedex/src/containers/App.js"],"names":["React","Component","Pokecard","App","constructor","props","state","data","updateData","bind","componentWillMount","csvFilePath","require","Papa","parse","header","download","skipEmptyLines","complete","result","setState","render","Data"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,iCAArB;AAKA,eAAe,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAEzCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;AACA,UAAMA,KAAN,EAFiB,CAIjB;;AAJiB,SAQnBC,KARmB,GAQX;AAACC,MAAAA,IAAI,EAAE;AAAP,KARW;AAKjB,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAIDC,EAAAA,kBAAkB,GAAG;AAEnB;AACA,QAAIC,WAAW,GAAGC,OAAO,CAAC,oBAAD,CAAzB;;AACA,QAAIC,IAAI,GAAGD,OAAO,CAAC,4BAAD,CAAlB;;AACAC,IAAAA,IAAI,CAACC,KAAL,CAAWH,WAAX,EAAwB;AACtBI,MAAAA,MAAM,EAAE,IADc;AAEtBC,MAAAA,QAAQ,EAAE,IAFY;AAGtBC,MAAAA,cAAc,EAAE,IAHM;AAItB;AACAC,MAAAA,QAAQ,EAAE,KAAKV;AALO,KAAxB;AAOD;;AAEDA,EAAAA,UAAU,CAACW,MAAD,EAAS;AACjB,UAAMZ,IAAI,GAAGY,MAAM,CAACZ,IAApB,CADiB,CAEjB;;AACA,SAAKa,QAAL,CAAc;AAACb,MAAAA,IAAI,EAAEA;AAAP,KAAd,EAHiB,CAGY;AAC9B;;AAEDc,EAAAA,MAAM,GAAE;AAGR,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKC,IAFb,CADF;AAKG;;AAxCsC","sourcesContent":["import React,{Component} from 'react';\nimport './App.css';\nimport Pokecard from '../components/Pokecard/Pokecard';\n\n\n\n\nexport default class App extends Component {\n\n  constructor(props) {\n    // Call super class\n    super(props);\n\n    // Bind this to function updateData (This eliminates the error)\n    this.updateData = this.updateData.bind(this);\n  }\n\n  state = {data: []}\n\n  componentWillMount() {\n\n    // Your parse code, but not seperated in a function\n    var csvFilePath = require(\"../assets/poke.csv\");\n    var Papa = require(\"papaparse/papaparse.min.js\");\n    Papa.parse(csvFilePath, {\n      header: true,\n      download: true,\n      skipEmptyLines: true,\n      // Here this is also available. So we can call our custom class method\n      complete: this.updateData\n    });\n  }\n\n  updateData(result) {\n    const data = result.data;\n    // Here this is available and we can call this.setState (since it's binded in the constructor)\n    this.setState({data: data}); // or shorter ES syntax: this.setState({ data });\n  }\n\n  render(){\n\n\n  return (\n    <div className=\"App\">\n    \n           {this.Data}\n    </div>\n  );}\n}\n\n\n"]},"metadata":{},"sourceType":"module"}