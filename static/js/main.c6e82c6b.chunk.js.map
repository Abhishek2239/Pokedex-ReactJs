{"version":3,"sources":["components/Pokecards/Pokecard/Pokecard.module.css","assets/poke.csv","components/Pokecards/Pokecard/Pokecard.js","components/Pokecards/Pokecards.js","components/SideDrawer/Toggle.js","components/Header/Header.js","components/Footer/Footer.js","components/SideDrawer/SideDrawer.js","components/SideBar/SideBar.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","card","side","back","frontStyles","backStyles","backImg","imgBox","img","id","fire","darkFire","fireDragon","poisonFire","fireWater","grass","grassPoison","psyGrass","poison","water","ghost","bug","ice","electric","ground","normal","waterGrass","dark","steel","details","name","ability","__webpack_require__","p","Pokecard","state","styles","changeClass","_this","setState","setTimeout","song","play","nextState","nextProps","this","props","_this2","cardbg","abilities","react_default","a","createElement","className","onClick","src","imgSrc","alt","ref","preload","slice","type","Component","Pokecards","data","csvFilePath","require","parse","header","download","skipEmptyLines","complete","result","_this3","searchedItems","searchedType","pokemons","pokeDisplay","tempArray","gen","showGen","map","item","Pokecards_Pokecard_Pokecard","ImgSrc","Name","ID","key","Abilities","showType","filter","toLowerCase","indexOf","searchItem","ind","start","end","push","setNoOfPosts","length","Fragment","children","Toggle","setToggleStatus","toggleStatus","Header","_ref","searchInputHandler","setShowGenStatus","setShowTypeStatus","setCurrentPage","SideDrawer_Toggle","value","onChange","event","target","placeholder","Footer","postsPerPage","totalPosts","pageNumbers","i","Math","ceil","num","SideDrawer","setGen","setType","random","SideBar","concat","App","_useState","useState","_useState2","Object","slicedToArray","currentPage","_useState3","_useState5","_useState6","setTotalPosts","indexOfLastPost","indexOfFirstPost","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","components_Header_Header","components_SideDrawer_SideDrawer","Pokecards_Pokecards_Pokecards","posts","resetCurrentPage","components_SideBar_SideBar","components_Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c6e82c6b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Pokecard_card__1Yy2u\",\"side\":\"Pokecard_side__2zNEa\",\"back\":\"Pokecard_back__1IaV4\",\"frontStyles\":\"Pokecard_frontStyles__8QBJB\",\"backStyles\":\"Pokecard_backStyles__1gvT5\",\"backImg\":\"Pokecard_backImg__3Egdn\",\"imgBox\":\"Pokecard_imgBox__VX2Xh\",\"img\":\"Pokecard_img__qj-w2\",\"id\":\"Pokecard_id___KM7J\",\"fire\":\"Pokecard_fire__3A83o\",\"darkFire\":\"Pokecard_darkFire__2Ivpd\",\"fireDragon\":\"Pokecard_fireDragon__1T3Lj\",\"poisonFire\":\"Pokecard_poisonFire__2QhjN\",\"fireWater\":\"Pokecard_fireWater__1oaCN\",\"grass\":\"Pokecard_grass__3dEDe\",\"grassPoison\":\"Pokecard_grassPoison__32hag\",\"psyGrass\":\"Pokecard_psyGrass__1MNfF\",\"poison\":\"Pokecard_poison__1ZyLF\",\"water\":\"Pokecard_water__248E8\",\"ghost\":\"Pokecard_ghost__2FlBw\",\"bug\":\"Pokecard_bug__1QmlZ\",\"ice\":\"Pokecard_ice__33hPY\",\"electric\":\"Pokecard_electric__22Cc_\",\"ground\":\"Pokecard_ground__1vpOp\",\"normal\":\"Pokecard_normal__1i2LZ\",\"waterGrass\":\"Pokecard_waterGrass__3yaI5\",\"dark\":\"Pokecard_dark__uvs64\",\"steel\":\"Pokecard_steel__26KXP\",\"details\":\"Pokecard_details__2WWlt\",\"name\":\"Pokecard_name__3WHI5\",\"ability\":\"Pokecard_ability__1tDKs\"};","module.exports = __webpack_public_path__ + \"static/media/poke.7d7a6aa3.csv\";","import React, { Component } from 'react';\nimport styles from './Pokecard.module.css';\n\nclass Pokecard extends Component {\n    state = {\n        frontStyles: '',\n        backStyles: styles.back,\n    }\n\n    changeClass = () => {\n        this.setState({ frontStyles: styles.frontStyles, backStyles: styles.backStyles })\n        setTimeout(() => {\n            this.song.play()\n        }, 400);\n\n        setTimeout(() => {\n            this.setState({ frontStyles: '', backStyles: styles.back })\n        }, 1000);\n    }\n\n    shouldComponentUpdate(nextState, nextProps) {\n        return this.state !== nextState || this.props !== nextProps\n    }\n\n    render() {\n        \n        let cardbg = '';\n\n        //Fire Classes\n        if (this.props.abilities === 'Fire' ||\n            this.props.abilities === 'Fire Flying' ||\n            this.props.abilities === 'Fire Rock' ||\n            this.props.abilities === 'Fire Fighting' ||\n            this.props.abilities === 'Fire Ground' ||\n            this.props.abilities === 'Fire Steel' ||\n            this.props.abilities === 'Fire Psychic' ||\n            this.props.abilities === 'Psychic Fire' ||\n            this.props.abilities === 'Fire Normal' ||\n            this.props.abilities === 'Bug Fire') {\n            cardbg = styles.fire\n        }\n        else if (this.props.abilities === 'Dark Fire' ||\n            this.props.abilities === 'Ghost Fire' ||\n            this.props.abilities === 'Fire Ghost' ||\n            this.props.abilities === 'Fire Dark') {\n            cardbg = styles.darkFire\n        }\n        else if (this.props.abilities === 'Fire Dragon' ||\n            this.props.abilities === 'Dragon Fire') {\n            cardbg = styles.fireDragon\n        }\n        else if (this.props.abilities === 'Poison Fire') {\n            cardbg = styles.poisonFire\n        }\n        else if (this.props.abilities === 'Fire Water') {\n            cardbg = styles.fireWater\n        }\n        //Grass Classes\n        else if (this.props.abilities === 'Grass' ||\n            this.props.abilities === 'Bug Grass' ||\n            this.props.abilities === 'Grass Flying' ||\n            this.props.abilities === 'Grass Fighting' ||\n            this.props.abilities === 'Rock Grass' ||\n            this.props.abilities === 'Grass Fairy' ||\n            this.props.abilities === 'Normal Grass'\n        ) {\n            cardbg = styles.grass\n        }\n        else if (this.props.abilities === 'Grass Poison' ||\n            this.props.abilities === 'Grass Dark') {\n            cardbg = styles.grassPoison\n        }\n        else if (this.props.abilities === 'Grass Psychic' ||\n            this.props.abilities === 'Psychic Grass') {\n            cardbg = styles.psyGrass\n        }\n        else if (this.props.abilities === 'Poison' ||\n            this.props.abilities === 'Bug Poison' ||\n            this.props.abilities === 'Water Poison' ||\n            this.props.abilities === 'Poison Water' ||\n            this.props.abilities === 'Poison Ground' ||\n            this.props.abilities === 'Poison Flying' ||\n            this.props.abilities === 'Poison Fighting' ||\n            this.props.abilities === 'Poison Bug' ||\n            this.props.abilities === 'Poison Dragon' ||\n            this.props.abilities === 'Rock Poison') {\n            cardbg = styles.poison\n        }\n        else if (this.props.abilities === 'Water' ||\n            this.props.abilities === 'Water Dragon' ||\n            this.props.abilities === 'Water Psychic' ||\n            this.props.abilities === 'Water Fighting' ||\n            this.props.abilities === 'Water Flying' ||\n            this.props.abilities === 'Rock Water' ||\n            this.props.abilities === 'Water Fairy' ||\n            this.props.abilities === 'Water Ground' ||\n            this.props.abilities === 'Water Rock' ||\n            this.props.abilities === 'Bug Water' ||\n            this.props.abilities === 'Water Bug'\n        ) {\n            cardbg = styles.water\n        }\n        else if (this.props.abilities === 'Bug') {\n            cardbg = styles.bug\n        }\n        else if (this.props.abilities === 'Ice' ||\n            this.props.abilities === 'Water Ice' ||\n            this.props.abilities === 'Ice Flying' ||\n            this.props.abilities === 'Fighting Ice' ||\n            this.props.abilities === 'Rock Ice' ||\n            this.props.abilities === 'Dragon Ice' ||\n            this.props.abilities === 'Dark Ice' ||\n            this.props.abilities === 'Grass Ice' ||\n            this.props.abilities === 'Ice Ground' ||\n            this.props.abilities === 'Ice Water') {\n            cardbg = styles.ice\n        }\n        else if (this.props.abilities === 'Electric' ||\n            this.props.abilities === 'Water Electric') {\n            cardbg = styles.electric\n        }\n        else if (this.props.abilities === 'Ground' ||\n            this.props.abilities === 'Rock Ground' ||\n            this.props.abilities === 'Ground Rock') {\n            cardbg = styles.ground\n        }\n        else if (this.props.abilities === 'Normal' ||\n            this.props.abilities === 'Normal Flying' ||\n            this.props.abilities === 'Normal Fairy') {\n            cardbg = styles.normal\n        }\n        else if (this.props.abilities === 'Water Grass') {\n            cardbg = styles.waterGrass\n        }\n        else if (this.props.abilities === 'Dark' ||\n            this.props.abilities === 'Dark Flying' ||\n            this.props.abilities === 'Rock Dark' ||\n            this.props.abilities === 'Water Dark') {\n            cardbg = styles.dark\n        }\n        else if (this.props.abilities === 'Ghost' ||\n            this.props.abilities === 'Ghost Grass' ||\n            this.props.abilities === 'Grass Ghost' ||\n            this.props.abilities === 'Water Ghost' ||\n            this.props.abilities === 'Ghost Poison' ||\n            this.props.abilities === 'Poison Dark') {\n            cardbg = styles.ghost\n        }\n        else if (this.props.abilities === 'Steel' ||\n            this.props.abilities === 'Grass Steel' ||\n            this.props.abilities === 'Water Steel'\n        ) {\n            cardbg = styles.steel\n        }\n\n        return (\n            <div className={styles.card}>\n\n                <div className={styles.side + ' ' + this.state.frontStyles} onClick={() => this.changeClass(this.props.id)} >\n                    <div className={styles.imgBox + ' ' + cardbg} >\n                        <img className={styles.img} src={this.props.imgSrc} alt=\"notfound\" />\n                        <p className={styles.id}>{this.props.id}</p>\n                    </div>\n                    <div className={styles.details}>\n                        <h3 className={styles.name}>{this.props.name}</h3>\n                        <p className={styles.ability}>{this.props.abilities}</p>\n                        <audio ref={(song) => { this.song = song; }} preload='true'>\n                            <source src={'/sounds/' + this.props.id.slice(1, 4) + '.wav'} type=\"audio/Wav\" ></source>\n                        </audio>\n                    </div>\n                </div>\n                <div className={styles.side + ' ' + cardbg + ' ' + this.state.backStyles}>\n                    <img className={styles.backImg} src={this.props.imgSrc} alt=\"notfound\" />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Pokecard\n","import React, { Component } from 'react';\nimport Pokecard from './Pokecard/Pokecard';\nimport './Pokecards.css';\n\n\nexport default class Pokecards extends Component {\n\n  state = {\n    data: [],\n  }\n\n  componentWillMount() {\n    const csvFilePath = require('../../assets/poke.csv');\n    const Papa = require(\"papaparse/papaparse.min.js\");\n    Papa.parse(csvFilePath, {\n      header: true,\n      download: true,\n      skipEmptyLines: true,\n      complete: (result) => this.setState({ data: result.data })\n    })\n  }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   Object.entries(this.props).forEach(([key, val]) =>\n  //     prevProps[key] !== val && console.log(`Prop '${key}' changed`)\n  //   );\n  //   Object.entries(this.state).forEach(([key, val]) =>\n  //     prevState[key] !== val && console.log(`State '${key}' changed`)\n  //   );\n  // }\n\n  shouldComponentUpdate(nextState, nextProps) {\n    return this.state !== nextState || this.props !== nextProps\n  }\n\n  render() {\n    \n    let searchedItems = ''\n    let searchedType = ''\n    let pokemons = []\n    let pokeDisplay = []\n    let tempArray = this.state.data\n\n    //slicing per generations\n    if (this.props.gen === 1) {\n      tempArray = tempArray.slice(0, 151)\n    }\n    else if (this.props.gen === 2) {\n      tempArray = tempArray.slice(151, 251)\n    }\n    else if (this.props.gen === 3) {\n      tempArray = tempArray.slice(251, 386)\n    }\n    else if (this.props.gen === 4) {\n      tempArray = tempArray.slice(386, 493)\n    }\n    else if (this.props.gen === 5) {\n      tempArray = tempArray.slice(493, 649)\n    }\n    else if (this.props.gen === 6) {\n      tempArray = tempArray.slice(649, 721)\n    }\n    else if (this.props.gen === 7) {\n      tempArray = tempArray.slice(721, 809)\n    }\n\n\n    if (this.props.showGen) {     \n\n      pokemons = tempArray.map((item) => {\n        return <Pokecard\n          imgSrc={item.ImgSrc}\n          name={item.Name}\n          id={item.ID}\n          key={item.ID}\n          abilities={item.Abilities}\n        />\n      })\n  }\n\n    else if (this.props.showType) {\n\n      searchedType = this.state.data.filter(\n        (item) => {\n          return item.Abilities.toLowerCase().indexOf(this.props.type.toLowerCase()) !== -1;\n        }\n      );\n      pokemons = searchedType.map((item) => {\n        return <Pokecard\n          imgSrc={item.ImgSrc}\n          name={item.Name}\n          id={item.ID}\n          key={item.ID}\n          abilities={item.Abilities}\n        />\n      })\n    }\n    else if(this.props.searchItem!==''){\n      searchedItems = this.state.data.filter(\n        (item) => {\n          return item.Name.toLowerCase().indexOf(this.props.searchItem.toLowerCase()) !== -1\n            || item.Abilities.toLowerCase().indexOf(this.props.searchItem.toLowerCase()) !== -1\n            || item.ID.indexOf(this.state.searchItem) !== -1\n        }\n      );\n      pokemons = (searchedItems.map((item) => {\n        return <Pokecard\n          imgSrc={item.ImgSrc}\n          name={item.Name}\n          id={item.ID}\n          key={item.ID}\n          abilities={item.Abilities}\n        />\n      }))\n    }\n    else {\n      pokemons = (this.state.data.map((item) => {\n        return <Pokecard\n          imgSrc={item.ImgSrc}\n          name={item.Name}\n          id={item.ID}\n          key={item.ID}\n          abilities={item.Abilities}\n        />\n      }))\n    }\n\n    //page wise showing result page1=1:50\n\n    for (let ind = this.props.start; ind < this.props.end; ind++) {\n      pokeDisplay.push(pokemons[ind])\n    }\n\n    this.props.setNoOfPosts(this.props.showGen ? tempArray.length\n      : this.props.showType ? searchedType.length\n        : this.props.searchItem !== '' ? searchedItems.length : 809)\n\n    return (\n      <>\n        <div className=\"pokecardsdiv\">\n\n          {this.props.children}\n\n          <div className=\"pokecards\">\n            {pokeDisplay}\n          </div>\n\n        </div>\n      </>\n\n    );\n  }\n}\n\n","import React from 'react'\n\n\nconst Toggle = (props) => {\n    return(\n        <div className='toggle'\n          onClick={()=>props.setToggleStatus(!props.toggleStatus)}>\n          <div className='toggleLi'></div>\n          <div className='toggleLi'></div>\n          <div className='toggleLi'></div>\n        </div>\n    );\n}\n\nexport default Toggle","import React from 'react'\nimport Toggle from '../SideDrawer/Toggle'\n\nconst Header = ({ setToggleStatus, toggleStatus, searchItem, searchInputHandler, setShowGenStatus, setShowTypeStatus ,setCurrentPage}) => {\n\n    return (\n        <div className=''>\n            <Toggle setToggleStatus={setToggleStatus} toggleStatus={toggleStatus} />\n            <h1 className='header'>Welcome to the National Pokedex</h1>\n\n            <div className='searchbarDiv'>\n                <input className=\"searchbar\"\n                    value={searchItem}\n                    onChange={(event) =>{\n                        searchInputHandler(event.target.value)\n                        setCurrentPage(1)\n                        setShowGenStatus(false)\n                        setShowTypeStatus(false)}\n                    }\n                    type=\"text\" placeholder=\"Search\"\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default Header","import React from 'react'\nimport './Footer.css'\n\nconst Footer = ({postsPerPage, totalPosts,setCurrentPage}) => {\n\n    const pageNumbers = [];\n\n    for (let i =1; i<=Math.ceil(totalPosts/postsPerPage);i++){\n        pageNumbers.push(i);        \n    }\n    \n    return(\n\n        <footer className='footer'>\n\n            {pageNumbers.map((num)=>(\n                <li key={num}\n                onClick={()=>setCurrentPage(num)}\n                className='footerli'>\n                    {num}\n                </li>\n            ))}\n            \n          </footer>\n    );\n}\n\nexport default Footer;","import React from 'react'\nimport './SideDrawer.css'\n\n\nconst SideDrawer = ({ toggleStatus, setToggleStatus,\n    setShowGenStatus, setGen, setShowTypeStatus, setType,setCurrentPage ,searchInputHandler}) => {\n\n    const pills = ['Grass', 'Fire', 'Water', 'Poison', 'Flying', 'Ground', 'Bug', 'Ghost', 'Normal',\n        'Electric', 'Fairy', 'Fighting', 'Psychic', 'Rock', 'Steel', 'Ice', 'Dragon', 'Dark']\n\n    const gens = [{ name: 'I', num: 1 }, { name: 'II', num: 2 }, { name: 'III', num: 3 },\n        { name: 'IV', num: 4 }, { name: 'V', num: 5 }, { name: 'VI', num: 6 }, { name: 'VII', num: 7 }, { name: 'All', num: '' }]\n\n    return (\n        <aside className={toggleStatus?'sideDrawer open':'sideDrawer'}>\n            <h3 className=\"sideDrawer-Heading\">Pokemon Generations</h3>\n\n            <div className=\"sideDrawer-generations\">\n                {gens.map((item) => <li className=\"side-gens\"\n                    key={Math.random()}\n                    onClick={() => {\n                        setCurrentPage(1)\n                        setToggleStatus(false)\n                        setShowTypeStatus(false)\n                        setShowGenStatus(true)\n                        setGen(item.num)\n                        searchInputHandler('')\n                    }}>\n                    {item.name}\n                </li>)}\n            </div>\n\n            <h3 className=\"sideDrawer-Heading\">Types</h3>\n\n            <div className=\"sideDrawer-types\">\n                {pills.map((item) => <li key={item}\n                    className={'side-pills pill' + item}\n                    onClick={() => {\n                        setCurrentPage(1)\n                        setToggleStatus(false)\n                        setShowGenStatus(false)\n                        setShowTypeStatus(true)\n                        setType(item)\n                        searchInputHandler('')\n                    }}>\n                    {item}\n                </li>)}\n            </div>\n\n        </aside>\n    );\n}\n\nexport default SideDrawer","import React from 'react'\n\nconst SideBar = ({setShowTypeStatus,setShowGenStatus,setGen,setType,searchInputHandler,setCurrentPage}) => {\n\n    const pillsAr = ['Grass', 'Fire', 'Water', 'Poison', 'Flying', 'Ground', 'Bug', 'Ghost', 'Normal',\n        'Electric', 'Fairy', 'Fighting', 'Psychic', 'Rock', 'Steel', 'Ice', 'Dragon', 'Dark']\n\n    const gensAr = [{ name: 'I', num: 1 }, { name: 'II', num: 2 }, { name: 'III', num: 3 }, { name: 'IV', num: 4 }, { name: 'V', num: 5 },\n    { name: 'VI', num: 6 }, { name: 'VII', num: 7 }, { name: 'All', num: '' }]\n    return (\n        <aside className='sidebar'>\n            <h3 className=\"sideHeading\">Pokemon Generations</h3>\n\n            <div className=\"generations\">\n                {gensAr.map((item) =>\n                    <li className=\"gens\"\n                        key={Math.random()}\n                        onClick={() => {\n                            setCurrentPage(1)\n                            setShowTypeStatus(false)\n                            searchInputHandler('')\n                            setShowGenStatus(true)\n                            setGen(item.num)\n                        }}>\n                        {item.name}\n                    </li>)}\n            </div>\n\n            <h3 className=\"sideHeading\">Types</h3>\n\n            <div className=\"types\">\n                {pillsAr.map((item) =>\n                    <li key={Math.random()}\n                        className={`pills pill${item}`}\n                        onClick={() => {\n                            setCurrentPage(1)\n                            setShowGenStatus(false)\n                            setShowTypeStatus(true)\n                            setType(item)\n                            searchInputHandler('')\n                        }}>\n                        {item}\n                    </li>)}\n            </div>\n\n        </aside>\n    )\n}\n\nexport default SideBar\n\n\n","import React, { useState} from 'react'\nimport './App.css'\nimport Pokecards from '../components/Pokecards/Pokecards'\nimport Header from '../components/Header/Header'\nimport Footer from '../components/Footer/Footer'\nimport SideDrawer from '../components/SideDrawer/SideDrawer'\nimport SideBar from '../components/SideBar/SideBar'\n\nconst App = () => {\n\n  //pagination\n\n  const [currentPage, setCurrentPage] = useState(1)\n  const [postsPerPage] = useState(50)\n  const [totalPosts, setTotalPosts] = useState(809)\n\n  const indexOfLastPost = currentPage * postsPerPage\n  const indexOfFirstPost = indexOfLastPost - postsPerPage\n\n  const settingPosts = (posts) => setTotalPosts(posts)\n  const resetCurrentPage = () => setCurrentPage(1)\n\n  //toggle sideDrawer\n\n  const [toggleStatus, setToggleStatus] = useState(false)\n\n  //search input\n\n  const [searchItem, searchInputHandler] = useState('')\n\n  //showgen and showtype\n\n  const [showType, setShowTypeStatus] = useState(false)\n  const [showGen, setShowGenStatus] = useState(false)\n\n  const [gen, setGen] = useState()\n  const [type, setType] = useState()\n\n  return (\n    <div className=\"App\">\n\n      <Header setToggleStatus={setToggleStatus} toggleStatus={toggleStatus} searchItem={searchItem} searchInputHandler={searchInputHandler}\n            setShowTypeStatus ={setShowTypeStatus} setShowGenStatus={setShowGenStatus} \n            setCurrentPage={setCurrentPage}/>\n\n      <SideDrawer toggleStatus={toggleStatus} setToggleStatus={setToggleStatus}\n        showType={showType} setShowTypeStatus={setShowTypeStatus}\n        showGen={showGen} setShowGenStatus={setShowGenStatus}\n        setGen={setGen} setType={setType}\n        setCurrentPage={setCurrentPage}\n        searchInputHandler={searchInputHandler}\n      />\n\n      <Pokecards start={indexOfFirstPost} end={indexOfLastPost} setNoOfPosts={settingPosts} resetCurrentPage={resetCurrentPage}\n        searchItem={searchItem} \n        gen={gen} showGen={showGen}\n        type={type} showType={showType}>\n\n          <SideBar setShowTypeStatus={setShowTypeStatus} setShowGenStatus={setShowGenStatus}\n            setGen={setGen} setType={setType} \n            searchInputHandler={searchInputHandler}\n            setCurrentPage={setCurrentPage}/>\n\n      </Pokecards>\n\n      <Footer postsPerPage={postsPerPage} totalPosts={totalPosts} setCurrentPage={setCurrentPage} />\n\n    </div>\n  )\n\n}\n\nexport default App\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}